name: Backend CI/CD

on:
  push:
    branches: [ main, develop ]
    paths: [ 'backend/**' ]
  pull_request:
    branches: [ main ]
    paths: [ 'backend/**' ]

defaults:
  run:
    working-directory: ./backend

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: './backend/package-lock.json'

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run lint

    - name: Run tests
      run: npm test
      env:
        NODE_ENV: test
        DATABASE_URL: ':memory:'
        RPC_URL: 'http://localhost:8545'
        ALCHEMY_OR_INFURA_KEY: 'test-key'
        CHAIN_ID: 31337
        FACTORY_ADDRESS: '0x1234567890123456789012345678901234567890'
        START_BLOCK: 1
        PINATA_API_KEY: 'test-key'
        PINATA_SECRET_API_KEY: 'test-secret'
        PINATA_JWT: 'test-jwt'
        API_KEY: 'test-api-key'

  indexer-smoke-test:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'
        cache-dependency-path: './backend/package-lock.json'

    - name: Install dependencies
      run: npm ci

    - name: Start local blockchain
      run: |
        npx hardhat node --port 8545 &
        sleep 10
      working-directory: .

    - name: Run indexer smoke test
      run: npm run test -- --testNamePattern="indexer"
      env:
        NODE_ENV: test
        DATABASE_URL: ':memory:'
        RPC_URL: 'http://localhost:8545'
        ALCHEMY_OR_INFURA_KEY: 'test-key'
        CHAIN_ID: 31337
        FACTORY_ADDRESS: '0x1234567890123456789012345678901234567890'
        START_BLOCK: 1
        PINATA_API_KEY: 'test-key'
        PINATA_SECRET_API_KEY: 'test-secret'
        PINATA_JWT: 'test-jwt'
        API_KEY: 'test-api-key'

  security-scan:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'
        cache-dependency-path: './backend/package-lock.json'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level moderate

    - name: Check for known vulnerabilities
      run: npx audit-ci --moderate

  build:
    runs-on: ubuntu-latest
    needs: [test, indexer-smoke-test]
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'
        cache-dependency-path: './backend/package-lock.json'

    - name: Install dependencies
      run: npm ci --production

    - name: Create deployment package
      run: |
        mkdir -p deploy
        cp -r src config migrations package*.json deploy/
        cd deploy && npm ci --production

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: backend-build
        path: ./backend/deploy/
        retention-days: 30